@model ContactManager.Models.Contact

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CategoryId" class="control-label"></label>
        <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId">
            <option value="">Select a category</option>
        </select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="phoneNumber">Phone</label>
        <input type="text" class="form-control" name="phoneNumber" value="" placeholder="Enter phone number" />
        <!-- Removed asp-validation-for="phoneNumber" since it's not a model property -->
        @if (ViewData.ModelState.ContainsKey("phoneNumber") && ViewData.ModelState["phoneNumber"].Errors.Any())
        {
            <span class="text-danger">@ViewData.ModelState["phoneNumber"].Errors.First().ErrorMessage</span>
        }
    </div>
    <div class="form-group">
        <label for="emailAddress">Email</label>
        <input type="text" class="form-control" name="emailAddress" value="" placeholder="Enter email address" />
        <!-- Removed asp-validation-for="emailAddress" since it's not a model property -->
        @if (ViewData.ModelState.ContainsKey("emailAddress") && ViewData.ModelState["emailAddress"].Errors.Any())
        {
            <span class="text-danger">@ViewData.ModelState["emailAddress"].Errors.First().ErrorMessage</span>
        }
    </div>
    <div class="form-group">
        <span class="text-danger">@Html.ValidationSummary(true)</span>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
    @Html.AntiForgeryToken()
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}